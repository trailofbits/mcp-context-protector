[project]
name = "mcp-context-protector"
dynamic = ["version"]
description = "MCP security wrapper"
readme = "README.md"
license-files = ["LICENSE"]
license = "Apache-2.0"

authors = [
    { name = "Trail of Bits", email = "opensource@trailofbits.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "mcp==1.10.0",
    "llamafirewall>=1.0.3",
    "aiofiles>=24.1.0",
]
requires-python = ">=3.10"

[tool.setuptools.dynamic]
version = { attr = "contextprotector.__version__" }

[project.optional-dependencies]
doc = ["pdoc"]
test = ["pytest", "pytest-cov", "pretend", "coverage[toml]"]
lint = [
    # NOTE: ruff is under active development, so we pin conservatively here
    # and let Dependabot periodically perform this update.
    "ruff ~= 0.6.2",
    "mypy >= 1.0",
    "types-html5lib",
    "types-requests",
    "types-toml",
    "interrogate",
]
dev = ["mcp-context-protector[doc,test,lint]", "twine", "build"]

[project.scripts]
"mcp-context-protector" = "contextprotector.__main__:main"

[project.urls]
Homepage = "https://github.com/trailofbits/mcp-context-protector/"
Documentation = "https://github.com/trailofbits/mcp-context-protector/README.md"
Issues = "https://github.com/trailofbits/mcp-context-protector/issues"
Source = "https://github.com/trailofbits/mcp-context-protector"

[tool.coverage.run]
# don't attempt code coverage for the CLI entrypoints
omit = ["src/contextprotector/_cli.py"]

[tool.mypy]
mypy_path = "src"
packages = "contextprotector"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
include = ["src/**/*.py", "test/**/*.py"]

[tool.ruff.lint]
select = ["ALL"]
# D203 and D213 are incompatible with D211 and D212 respectively.
# COM812 and ISC001 can cause conflicts when using ruff as a formatter.
# See https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules.
ignore = ["D203", "D213", "COM812", "ISC001", "ANN101", "ANN102", "C901", "PLR0912", "PLR0915"]

[tool.ruff.lint.per-file-ignores]
"**/*_cli.py" = [
    "T201", # allow `print` in cli module
]
"test/**/*.py" = [
    "D",    # no docstrings in tests
    "S101", # asserts are expected in tests
    "T201", # allow `print` in tests
    "PLR2004", # allow "magic numbers" in tests
    "SLF001",  # allow private member access in tests
    "PLW0603", # allow global variables
    "PLW0602", # allow global variables
]
"src/contextprotector/__main__.py" = [
    "T201", # allow `print` in main module
]
[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test", "src/contextprotector/_cli.py"]
ignore-semiprivate = true
fail-under = 100

[dependency-groups]
dev = [
    "psutil>=7.0.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-timeout>=2.4.0",
]

[tool.uv]
package = true
